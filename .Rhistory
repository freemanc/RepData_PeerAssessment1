setwd("~/Documents/coursera/Reproducible_research/assignment1/RepData_PeerAssessment1")
?unzip
unzip("activity.zip")
data <- read.csv("activity.csv")
str(data)
head(data)
data$date <- as.Date(data$date)
str(data)
?hist
hist(data$steps, breaks = data$date)
hist(data$steps, breaks = data$date)
?ave
library(dplyr)
install.packages("dplyr")
library(dplyr)
days <- group_by(data, date)
summarize(days, total.steps = sum(steps, na.rm = TRUE))
tail(data)
temp_data <- summarize(days, total.steps = sum(steps, na.rm = TRUE))
hist(temp_data)
hist(temp_data$total.steps)
mean(temp_data$total.steps)
median(temp_data$total.steps)
?abline
?plot
?mkdir
?png
source("code.R")
source("code.R")
intervals <- group_by(activity, interval)
temp_data <- summarize(intervals, ave.steps = mean(steps, na.rm = TRUE))
with(temp_data, plot(intervals, ave.steps, type = "l"))
with(temp_data, plot(intervals, ave.steps))
temp_data
head(temp_data)
tail(temp_data)
plot(temp_data)
plot(temp_data, type = "l")
plot(temp_data$interval, temp_data$ave.steps)
plot(temp_data$interval, temp_data$ave.steps, type = "l")
str(temp_data)
transform(temp_data, interval = factor(interval))
plot(temp_data$interval, temp_data$ave.steps, type = "l")
str(temp_data)
temp_data1 <- transform(temp_data, interval = factor(interval))
plot(temp_data1$interval, temp_data1$ave.steps, type = "l")
plot(temp_data1$interval, temp_data1$ave.steps)
plot(temp_data1$interval, temp_data1$ave.steps, type = "l")
?as.time
as.Time
?ts
ts(1:12, frequency = 5, start = c(0,0))
ts(1:12, frequency = 5, start = 0
)
?sprintf
?strptime
temp_data2 <- transform(temp_data, interval = strptime(sprintf("%04d", interval), format = "%H%M"))
head(temp_data2)
plot(temp_data2, type = "1")
plot(temp_data2, type = "l")
head(activity)
sum(is.na(activity$steps))
?tapply
str(activity)
str(data)
?levels
imputed <- transform(activity, interval = factor(interval))
for (i in levels(imputed$interval)){
imputed[imputed$interval = i & is.na(imputed$steps), "steps"] <-
summary[summary$interval = i, "ave.steps"]
imputed <- transform(activity, interval = factor(interval))
for (i in levels(imputed$interval)){
imputed[imputed$interval == i & is.na(imputed$steps), "steps"] <-
summary[summary$interval = i, "ave.steps"]
imputed <- transform(activity, interval = factor(interval))
for (i in levels(imputed$interval)){
imputed[imputed$interval == i & is.na(imputed$steps), "steps"] <-
summary[summary$interval == i, "ave.steps"]
}
rm(list = ls())
activity <- read.csv("activity.csv")
activity$date <- as.Date(activity$date)
library(dplyr)
days <- group_by(activity, date)
summary_date <- summarize(days, total.steps = sum(steps, na.rm = TRUE))
intervals <- group_by(activity, interval)
summary_interval <- summarize(intervals, ave.steps = mean(steps, na.rm = TRUE))
summary_interval <- transform(summary, interval = strptime(sprintf("%04d", interval),
format = "%H%M"))
head(summary_interval)
tail(summary_interval)
summary_interval <- transform(summary, interval = strptime(sprintf("%04d", interval), format = "%H%M"))
summary_interval <- transform(summary_interval, interval = strptime(sprintf("%04d", interval), format = "%H%M"))
head(summary_interval)
tail(summary_interval)
sum(is.na(activity$steps))
imputed <- transform(activity, interval = factor(interval))
head(imputed)
str(imputed)
levels(imputed$interval)
summary_interval[summary_interval$interval =  "2110",]
summary_interval[summary_interval$interval ==  "2110",]
summary_interval <- transform(summary_interval, interval = factor(interval))
for (i in levels(imputed$interval)){
imputed[imputed$interval == i & is.na(imputed$steps), "steps"] <-
summary_interval[summary_interval$interval == i, "ave.steps"]
}
rm(list = ls())
activity <- read.csv("activity.csv")
activity$date <- as.Date(activity$date)
library(dplyr)
days <- group_by(activity, date)
summary_date <- summarize(days, total.steps = sum(steps, na.rm = TRUE))
mean(summary_date$total.steps)
median(summary_date$total.steps)
intervals <- group_by(activity, interval)
summary_interval <- summarize(intervals, ave.steps = mean(steps, na.rm = TRUE))
summary_ts <- transform(summary_interval, interval = strptime(sprintf("%04d", interval),
format = "%H%M"))
sum(is.na(activity$steps))
imputed <- transform(activity, interval = factor(interval))
summary_interval <- transform(summary_interval, interval = factor(interval))
for (i in levels(imputed$interval)){
imputed[imputed$interval == i & is.na(imputed$steps), "steps"] <-
summary_interval[summary_interval$interval == i, "ave.steps"]
}
head(imputed)
tail(imputed)
sum(is.na(imputed$steps))
days1 <- group_by(imputed, date)
summary_date1 <- summarize(days, total.steps = sum(steps, na.rm = TRUE))
mean(summary_date1$total.steps)
median(summary_date1$total.steps)
hist(summary_date1$total.steps)
?gl
?ifelse
?weekdays
weekdays <- weekdays(imputed$date)
head(weekdays, 7)
weekdays <- ifelse(weekdays(imputed$date) %in% c("Saturday","Sunday"), "weekend", "weekday")
str(weekdays)
library(plyr)
mutate(imputed, factor(weekdays))
imputed <- mutate(imputed, factor(weekdays))
head(imputed)
?mutate
library(plyr)
?mutate
imputed <- mutate(imputed, weekdays = factor(weekdays))
head(imputed)
str(imputed)
intervals1 <- group_by(activity, interval)
summary_interval1 <- summarize(intervals1, ave.steps = mean(steps, na.rm = TRUE),
weekdays = weekdays)
summary_ts1 <- transform(summary_interval1, interval = strptime(sprintf("%04d", interval),
format = "%H%M"))
intervals1 <- group_by(imputed, interval)
summary_interval1 <- summarize(intervals1, ave.steps = mean(steps, na.rm = TRUE),
weekdays = weekdays)
summary_ts1 <- transform(summary_interval1, interval = strptime(sprintf("%04d", interval),
format = "%H%M"))
intervals1 <- group_by(imputed, interval)
summary_interval1 <- summarize(intervals1, ave.steps = mean(steps, na.rm = TRUE))
head(summary_interval1)
str(summary_interval1)
str(imputed)
intervals1
str(intervals1)
?group_by
intervals1 <- group_by(imputed, weekdays, interval)
str(intervals1)
summary_interval1 <- summarize(intervals, ave.steps = mean(steps, na.rm = TRUE))
summary_interval1
str(summary_interval1)
intervals
summary_interval1 <- summarize(intervals1, ave.steps = mean(steps, na.rm = TRUE))
summary_interval1
intervals1
summarize
?summarize
intervals1 <- group_by(imputed, interval, weekdays)
summary_interval1 <- summarize(intervals1, ave.steps = mean(steps, na.rm = TRUE))
summary_interval1 <- summarize(intervals1, ave.steps = mean(steps, na.rm = TRUE))
library(reshape2)
library(reshape2)
melted <- melt(imputed, id.vars = c("weekdays","interval"), measure.vars = "steps")
head(melted)
summary <- dcast(melted, weekdays + interval ~ variable, fun.aggregate = mean)
summary
summary <- dcast(melted, weekdays + interval ~ steps, fun.aggregate = mean)
summary1 <- transform(summary, interval = strptime(sprintf("%04d", interval),
format = "%H%M"))
summary1
summary
str(summary)
summary_interval
?as.character
summary$interval <- as.character(summary$interval)
summary1 <- transform(summary, interval = strptime(sprintf("%04d", interval),
format = "%H%M"))
str(summary)
summary$interval <- as.integer(summary$interval)
summary1 <- transform(summary, interval = strptime(sprintf("%04d", interval),
format = "%H%M"))
summary1
?mfcol
?plot
mfcol <- c(1,2)
with(subset(summary1, weekdays = "weekday"), plot(interval, ave.steps, type = "l", color = "blue"))
color()
?color
color
color()
with(subset(summary1, weekdays = "weekday"), plot(interval, steps, type = "l", color = "blue"))
col()
with(subset(summary1, weekdays = "weekend"), plot(interval, steps, type = "l", col = "red"))
with(subset(summary1, weekdays = "weekday"), plot(interval, steps, type = "l", col = "blue"))
par(mfcol = c(2,1))
with(subset(summary1, weekdays = "weekday"), plot(interval, steps, type = "l", col = "blue"))
with(subset(summary1, weekdays = "weekend"), plot(interval, steps, type = "l", col = "red"))
subset(summary1, weekdays = "weekday")
?subset
par(mfcol = c(2,1))
with(subset(summary1, weekdays == "weekend"), plot(interval, steps, type = "l", col = "blue"))
with(subset(summary1, weekdays == "weekday"), plot(interval, steps, type = "l", col = "red"))
library(lattice)
xyplot(steps ~ interval | weekdays, summary1)
str(summary1$interval)
?xyplot
library(ggplot2)
qplot(interval, steps, data = summary1, facet = . ~ weekdays)
qplot(interval, steps, data = summary1, geom = "line", facet = . ~ weekdays)
?qplot
str(summary1)
qplot(interval, steps, data = summary1, geom = "line", facet = weekdays ~.)
qplot(interval, steps, data = summary1, geom = "line", facet = weekdays~.)
qplot(interval, steps, data = summary1, geom = "line", facet = .~weekdays)
plot
qplot(interval, steps, data = summary1, geom = "line", facets = . ~ weekdays)
qplot(interval, steps, data = summary1, geom = "line", facets = weekdays ~ .)
names(summary)
rename(summary, ave.steps = steps)
summary <- rename(summary, ave.steps = steps)
?rename
library(dplyr)
summary <- rename(summary, ave.steps = steps)
str(summary)
summary <- rename(summary, s = steps)
summary <- rename(summary, "s" = "steps")
names(summary)
summary <- rename(summary, wd = weekdays)
?rename
?copy2dev
?dev.copy
str(summary1)
sum(is.na(summary1$steps))
head(summary_data1)
head(summary_date1)
tail(summary_date1)
data <- summary_date1$tot
str(data)
summary(data)
?mean
mean(data)
median(data)
?median
mean(summary_data1$tot)
mean(summary_date1$tot)
median(summary_date1$tot)
mean(summary_date1$total.steps)
median(summary_date1$total.steps)
mean
?mean
mean(summary_date1$total.steps)
median(summary_date1$total.steps)
